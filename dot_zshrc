# add to PATH
export PATH=$PATH:/home/neil/.local/bin
export PATH=$PATH:/home/neil/go/bin
eval "$(oh-my-posh init zsh --config ~/.config/oh_my_posh/mytheme.toml)"

# Install zinit start
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
if [ ! -d "$ZINIT_HOME" ]; then
	mkdir -p "$(dirname $ZINIT_HOME)"
	git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi
source "${ZINIT_HOME}/zinit.zsh"
# Install zinit end

# load completions
zstyle :compinstall filename '/home/neil/.zshrc'
autoload -Uz compinit && compinit

zinit cdreplay -q

# zinit plugins
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab
zinit light kutsan/zsh-system-clipboard

# zvm
function zvm_config() {
	ZVM_CURSOR_STYLE_ENABLED=false
	ZVM_INIT_MODE=sourcing
	ZVM_VI_SURROUND_BINDKEY=s-prefix
}
zinit ice depth=1
zinit light jeffreytse/zsh-vi-mode

# History
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
# make fzf-tab complete hidden files, directories.
setopt globdots

# shell integrations
eval "$(spotify_player generate zsh)"
eval "$(fzf --zsh)"
eval "$(zoxide init zsh --cmd cd)"
eval "$(trash --print-completion zsh)"
eval "$(gtrash completion zsh)"

# fzf options
export FZF_CTRL_T_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

# completion style
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'lsd -a --color=always $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'lsd -a --color=always $realpath'

# alias
alias ls='lsd'
alias ll='lsd -l'
alias la='lsd -al'

# custom function
# yazi shell integration
function yz() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# keybindings
#bindkey -e
#bindkey '^p' history-search-backward
#bindkey '^n' history-search-forward
bindkey -s '^o' 'yz^M'

# environment variables
export EDITOR="nvim"
export CLICOLOR_FORCE=1
export PYDORO_CONFIG_FILE="$HOME/.config/pydoro/pydoro.ini"
export CRYPTOGRAPHY_OPENSSL_NO_LEGACY=1

# oh-my-posh
#eval "$(oh-my-posh init zsh --config ~/.config/oh_my_posh/mytheme.omp.json)"
#eval "$(oh-my-posh init zsh --config https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/refs/heads/main/themes/ys.omp.json)"
#eval "$(oh-my-posh init zsh --config ~/.config/oh_my_posh/mytheme.toml)"
#eval "$(oh-my-posh init zsh --config ~/test.toml)"

function startconda() {
	# >>> conda initialize >>>
	# !! Contents within this block are managed by 'conda init' !!
	__conda_setup="$('/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2>/dev/null)"
	if [ $? -eq 0 ]; then
	  eval "$__conda_setup"
	else
	  if [ -f "/opt/miniconda3/etc/profile.d/conda.sh" ]; then
		. "/opt/miniconda3/etc/profile.d/conda.sh"
	  else
		export PATH="/opt/miniconda3/bin:$PATH"
	  fi
	fi
	unset __conda_setup
	# <<< conda initialize <<<
}
